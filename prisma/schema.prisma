// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id@default(autoincrement())
  name String @unique
  email String @unique
  password String 
  dono Boolean @default(false)
  code String @default("")
  EToken String?
  EmailVer Boolean @default(false)
  creatAt  DateTime @default(now())
  updateAt DateTime @updatedAt
  cards       Card[]
    comentario Comment[]

}

model Card {
  id Int @id @default(autoincrement())
  title String
  content String?
  public Boolean @default(false)
  sociallink String?
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  capa String?      // URL da imagem de capa
  arquivo String?   // URL do arquivo anexado (novo campo)
  creatAt  DateTime @default(now())
  updateAt DateTime @updatedAt
  avaliacao Avaliacao[]
  comentario Comment[]
  views     Int?     @default(0)
}

model Avaliacao {
  id        Int      @id @default(autoincrement())
  post    Card @relation(fields: [postId], references: [id])
  postId Int
  nota      Int @default(1)     // Vai de 1 a 5 (as estrelas)
  createdAt DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Card     @relation(fields: [postId], references: [id])
  postId    Int
}